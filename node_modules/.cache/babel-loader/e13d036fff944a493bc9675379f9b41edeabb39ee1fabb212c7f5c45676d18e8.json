{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantity-database\\\\src\\\\boq.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport './boq.css';\nimport ProductForm from './form';\nimport { Slider, Skeleton } from '@mui/material';\nimport { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"card-container\">\n//         <CardSection className=\"card-image\">\n//           <img src={image} alt={title} className=\"image\" />\n//         </CardSection>\n\n//         <CardSection className=\"card-features\">\n//           <h3>{title}</h3>\n//           <p>{details}</p>\n//         </CardSection>\n\n//         <CardSection className=\"card-add-ons\">\n//           <h3>ADD ON</h3>\n//           <ul>\n//             {addOns.map((addOn, index) => (\n//               <li key={index}>\n//                 <label>\n//                   <input\n//                     type=\"checkbox\"\n//                     onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                   />\n//                   {addOn.name} (+₹{addOn.price})\n//                 </label>\n//               </li>\n//             ))}\n//           </ul>\n//         </CardSection>\n\n//         <CardSection className=\"card-summary\">\n//           <h4>Summary</h4>\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//           <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//         </CardSection>\n//       </div>\n//     </>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 5000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n\n//   async function getProducts() {\n//     return await supabase.from(\"products\").select();\n//   }\n\n//   useEffect(() => {\n\n//     getProducts().then(async ({ data, error }) => {\n//       if (error) { \n//         console.error(error); \n//         return;\n//       }\n//       let newData = [];\n//       for (let ind in data) {\n//         let obj = data[ind];\n//         const { data: Photo, error: PhotoError } = await supabase.storage.from(\"addon\").createSignedUrl(`${obj.image}`, 3600);\n//         if (PhotoError) console.log(PhotoError);\n//         const { data: addons, error: addonsError } = await supabase.from(\"addons\").select().eq(\"productid\", obj.id);\n//         let addonsList = [];\n//         for (let adn in addons) {\n//           let adf = addons[adn];\n//           const { data: Photo2, error: PhotoError2 } = await supabase.storage.from(\"addon\").createSignedUrl(`${adf.image}`, 3600);\n//           if (PhotoError2) console.log(PhotoError2);\n//           addonsList.push({ ...adf, image: Photo2.signedUrl });\n//         }\n//         newData.push({ ...obj, addons: addonsList, image: Photo.signedUrl });\n//       }\n//       setProductData(newData);\n//       setLoading(false);\n//     });\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={5000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <Skeleton key={index} variant=\"rectangular\" height={200} width=\"90%\" style={{ margin: '10px 0' }} />\n//           ))\n//         ) : (\n//           categories.map((category) => (\n//             <div key={category} className=\"category-section\">\n//               <h2>{category}</h2>\n//               {productsData\n//                 .filter((product) => product.category === category)\n//                 .map((product, index) => (\n//                   <div key={index}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                     />\n//                   </div>\n//                 ))}\n//             </div>\n//           ))\n//         )}\n//       </div>\n//       <ProductForm />\n//     </div>\n//   );\n// };\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(ProductForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","ProductForm","Slider","Skeleton","supabase","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantity-database/src/boq.js"],"sourcesContent":["\nimport React, { useState, useMemo, useEffect } from 'react';\nimport './boq.css';\nimport ProductForm from './form';\nimport { Slider, Skeleton } from '@mui/material';\nimport { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <>\n//       <div className=\"card-container\">\n//         <CardSection className=\"card-image\">\n//           <img src={image} alt={title} className=\"image\" />\n//         </CardSection>\n\n//         <CardSection className=\"card-features\">\n//           <h3>{title}</h3>\n//           <p>{details}</p>\n//         </CardSection>\n\n//         <CardSection className=\"card-add-ons\">\n//           <h3>ADD ON</h3>\n//           <ul>\n//             {addOns.map((addOn, index) => (\n//               <li key={index}>\n//                 <label>\n//                   <input\n//                     type=\"checkbox\"\n//                     onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                   />\n//                   {addOn.name} (+₹{addOn.price})\n//                 </label>\n//               </li>\n//             ))}\n//           </ul>\n//         </CardSection>\n\n//         <CardSection className=\"card-summary\">\n//           <h4>Summary</h4>\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//           <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//         </CardSection>\n//       </div>\n//     </>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 5000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n\n//   async function getProducts() {\n//     return await supabase.from(\"products\").select();\n//   }\n\n//   useEffect(() => {\n\n//     getProducts().then(async ({ data, error }) => {\n//       if (error) { \n//         console.error(error); \n//         return;\n//       }\n//       let newData = [];\n//       for (let ind in data) {\n//         let obj = data[ind];\n//         const { data: Photo, error: PhotoError } = await supabase.storage.from(\"addon\").createSignedUrl(`${obj.image}`, 3600);\n//         if (PhotoError) console.log(PhotoError);\n//         const { data: addons, error: addonsError } = await supabase.from(\"addons\").select().eq(\"productid\", obj.id);\n//         let addonsList = [];\n//         for (let adn in addons) {\n//           let adf = addons[adn];\n//           const { data: Photo2, error: PhotoError2 } = await supabase.storage.from(\"addon\").createSignedUrl(`${adf.image}`, 3600);\n//           if (PhotoError2) console.log(PhotoError2);\n//           addonsList.push({ ...adf, image: Photo2.signedUrl });\n//         }\n//         newData.push({ ...obj, addons: addonsList, image: Photo.signedUrl });\n//       }\n//       setProductData(newData);\n//       setLoading(false);\n//     });\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={5000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <Skeleton key={index} variant=\"rectangular\" height={200} width=\"90%\" style={{ margin: '10px 0' }} />\n//           ))\n//         ) : (\n//           categories.map((category) => (\n//             <div key={category} className=\"category-section\">\n//               <h2>{category}</h2>\n//               {productsData\n//                 .filter((product) => product.category === category)\n//                 .map((product, index) => (\n//                   <div key={index}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                     />\n//                   </div>\n//                 ))}\n//             </div>\n//           ))\n//         )}\n//       </div>\n//       <ProductForm />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\nconst App = () => {\n  return <ProductForm />;\n};\n\nexport default App;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAC3D,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,QAAQ;AAChC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAChD,SAASC,QAAQ,QAAQ,YAAY;;AAErhB,oBAAOD,OAAA,CAACL,WAAW;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB,CAAC;AAACC,EAAA,GAFIL,GAAG;AAIT,eAAeA,GAAG;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}